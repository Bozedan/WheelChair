footprint: [[0.8,0.4], [0.8,-0.4], [-0.305,-0.4], [-0.305,0.4]]
publish_frequency: 10.0
transform_tolerance: 0.5
map_type: costmap



global_inflation_layer:
  enabled: true
  cost_scaling_factor: 1.75
  inflation_radius: 0.5

local_inflation_layer:
  enabled: true
  cost_scaling_factor: 5.0
  inflation_radius: 0.25

static_layer:
  unknown_cost_value: 2
  lethal_cost_threshold: 96
  first_map_only: false
  subscribe_to_updates: false
  track_unknown_space: false
  use_maximum: true
  trinary_costmap: false

inflation_layer:
  inflation_radius: 30.  # the bigger the better, defines where the gradient is
  cost_scaling_factor: 0.9  # 0.5 the bigger the steeper the gradient is

     
laser_obstacle_layer:
    observation_sources: laser_scan
    track_unknown_space: true
    footprint_clearing_enabled: true
    combination_method: 1  # 0 - overwrite, 1 - max, 99 - nothing

    laser_scan: 
        sensor_frame: laser_link
        data_type: LaserScan
        topic: /vehiclediffdrive/laser/scan
        marking: true
        clearing: true
        obstacle_range: 10.
        raytrace_range: 12.
        inf_is_valid: true  

point_obstacle_layer:
    observation_sources: point_cloud_kinect  point_clear
    track_unknown_space: true
    footprint_clearing_enabled: true
    combination_method: 1  # 0 - overwrite, 1 - max, 99 - nothing

    point_cloud_kinect:
        sensor_frame: camera_link
        data_type: PointCloud2
        topic: /camera/depth/points
        marking: true
        clearing: true
        min_obstacle_height: 0.1
        max_obstacle_height: 0.8
        obstacle_range: 2.4.
        raytrace_range: 3.
        expected_update_rate: 0.0   # default 0, if not updating at this rate at least, remove from buffer
        observation_persistence: 0.0 # default 0, use all measurements taken during now-value, 0=latest
        voxel_filter: true           # default off, apply voxel filter to sensor, recommend on
        clear_after_reading: true   # default false, clear the buffer after the layer gets readings from it

point_obstacle_layer_negative:
    observation_sources: point_cloud_kinect  point_clear
    track_unknown_space: true
    footprint_clearing_enabled: true
    combination_method: 1  # 0 - overwrite, 1 - max, 99 - nothing

    point_cloud_kinect:
        sensor_frame: camera_link
        data_type: PointCloud2
        topic: /camera/depth/points
        marking: true
        clearing: true
        min_obstacle_height: -0.8
        max_obstacle_height: -0.05
        obstacle_range: 2.4.
        raytrace_range: 3.
        expected_update_rate: 0.0   # default 0, if not updating at this rate at least, remove from buffer
        observation_persistence: 0.0 # default 0, use all measurements taken during now-value, 0=latest
        voxel_filter: true           # default off, apply voxel filter to sensor, recommend on
        clear_after_reading: true   # default false, clear the buffer after the layer gets readings from it
        
    point_clear:
        enabled: on                #default true, can be toggled on/off with associated service call
        data_type: PointCloud2
        topic: /camera/depth/points
        marking: false
        clearing: true
        max_z: 2.0                  # default 0, meters
        min_z: 0.01                  # default 10, meters
        #vertical_fov_angle: 0.523   # default 0.7, radians. For 3D lidars it's the symmetric FOV about the planar axis.
        #vertical_fov_padding: 0.05    # 3D Lidar only. Default 0, in meters
        #horizontal_fov_angle: 6.29  # 3D lidar scanners like the VLP16 have 360 deg horizontal FOV.
        #decay_acceleration: 5.0     # default 0, 1/s^2.
        model_type: 0               # default 0, model type for frustum. 0=depth camera, 1=3d lidar like VLP16 or similar

  
        



